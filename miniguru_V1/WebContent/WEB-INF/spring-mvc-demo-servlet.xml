<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">
        
	<!-- Step 3: Add support for component scanning -->
	<context:component-scan base-package="com.miniguru" />

	<!-- Load Property Files -->
	<bean class="org.springframework.beans.factory.config.propertyPlaceholderConfigurer">
	   <property name="resources">
	      <list>
	         <value>classpath:db.properties</value>
	       <value>classpath:log4j.properties</value>
	    </list>
	   </property>
	</bean>
	
	<!-- Step 4: Add support for conversion, formatting and validation support -->
	<mvc:annotation-driven/>
	
	<!-- Step 5: Define Spring MVC view resolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- load custom message resources -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		
		<property name="basenames" value="resources/messages" />
	</bean>
	
	<bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
	<property name="driverClass" value="$(driverClassName)"/>
	<property name="jdbcUrl" value="$(url)"/>
	<property name="user" value="$(username)"/>
	<property name="password" value="${password}"/>
	
	<property name="initialPoolSize" value="5"/>
	<property name="minPoolSize" value="5"/>
	<property name="maxPoolSize" value="20"/>
	<property name="maxIdleTime" value="30000"/>
	</bean>
	
	<!-- hibernate Session factory-->
	<bean id="sessionFactory" 
	      class="org.springframework.orm.hibernate5.localsessionFactoryBean">
	   <property name="dataSource" ref="myDataSource"/>
	   <property name="packagesToScan" value="com.dream.spring.entity"/>
	   <property name="hibernateProperties">
	       <props>
	       <prop key="hibernate.dialect">org.hibernate.dilect.MySQLDialect</prop>
	       <prop key="hibernate.show_sql">true</prop>
	       </props>
	   </property>
	</bean>
	
	<!-- Hibernate Transaction Manager -->
	<bean id="myTransactionManager"
	      class="org.springframework.orm.hibernate5.HibernateTransactionManager">
	     <property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- Enable Configuration of transactional behaviour based on configuration -->
	<tx:annotation-driven transaction-manager="myTransactionManager"/>

	<!-- Add Support for reading web resources:css,images,js,etc -->
	<mvc:resources mapping="/resources/**" location="/WEB-INF/resources/" />
	
	<bean id="validater" class="org.springframework.validation.beanvalidationfactoryBean"/>
</beans>





